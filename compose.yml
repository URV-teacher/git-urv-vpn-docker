services:
  forti-vpn:
    image: aleixmt/repo-updater:latest
    container_name: forti-vpn
    build:
      context: .
      dockerfile: vpn.Dockerfile
    cap_add:
      - NET_ADMIN  # Needed or the connections through the VPN never succeed
    devices:
      - /dev/ppp  # Needed or the connections through the VPN never succeed
    volumes:
      - ./data:/data
      - ./repos:/repos
      - ./logs:/var/log
    secrets:
      - urv_user
      - urv_pass
      - vpn_gateway
      - vpn_realm
      - vpn_port
      - vpn_trusted_cert
      - git_server
    healthcheck:
      test: ["CMD", "sh", "-c", "test -f /READY || exit 1"]  # but `sh` must exist
      interval: 5s        # check every 5 seconds
      timeout: 2s         # give each check up to 2 seconds
      retries: 12         # mark unhealthy after 12 failed checks (â‰ˆ 1 minute)
      start_period: 120s   # grace period before health checks begin
    #entrypoint: /git_clone.exp <DNI> <GIT_SERVER_BEHIND_FORTINET_VPN> <REPO_NAME> /repos/my-project <PASS>

  git:
    depends_on:
      forti-vpn:
        condition: service_healthy

    container_name: git
    build:
      context: .
      dockerfile: git.Dockerfile
    volumes:
      - ./repos:/repos
      - ./logs:/var/log
    secrets:
      - urv_user
      - urv_pass
      - git_server
    network_mode: "service:forti-vpn"
    command: [ "clone" ]



secrets:
  urv_user:
    file: secrets/URV_USER
  urv_pass:
    file: secrets/URV_PASSWORD
  vpn_realm:
    file: secrets/VPN_REALM
  vpn_gateway:
    file: ./secrets/VPN_GATEWAY
  vpn_port:
    file: ./secrets/VPN_PORT
  vpn_trusted_cert:
    file: ./secrets/VPN_TRUSTED_CERT
  git_server:
    file: ./secrets/GIT_SERVER