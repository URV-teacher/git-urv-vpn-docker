#!/usr/bin/expect -f
set timeout -1

# --- helpers -------------------------------------------------------

proc read_file {path} {
    set f [open $path r]
    set data [read $f]
    close $f
    return $data
}

proc read_secret {VAR_NAME} {
    # 1) /run/secrets/<lowercase>
    set lc_name [string tolower $VAR_NAME]
    set secret_path "/run/secrets/$lc_name"
    if {[file exists $secret_path]} {
        return [read_file $secret_path]
    }

    # 2) $VAR_NAME_FILE -> file path
    set file_var "${VAR_NAME}_FILE"
    if {[info exists ::env($file_var)] && [file exists $::env($file_var)]} {
        return [read_file $::env($file_var)]
    }

    # 3) $VAR_NAME -> value
    if {[info exists ::env($VAR_NAME)]} {
        return $::env($VAR_NAME)
    }

    # Not found: return empty (or 'error' if you prefer hard-fail)
    return ""
}

# --- secrets (read literally; no trimming) ------------------------

set user     [read_secret "SSH_USERNAME"]
set server   [read_secret "SSH_HOST"]
set password [read_secret "SSH_PASSWORD"]

# --- git/expect flow ----------------------------------------------

spawn git {*}$argv

expect {
    -re "$user@$server's password:" {
        send "$password\r"
        exp_continue
    }
    eof
}


